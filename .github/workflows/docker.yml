
name: Docker test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        module: [ shell, compose, multiarch ]
        include:
          - module: shell
            name: Docker with a shell script
            path: docker
            tool: docker
            stop: docker stop lowkey-docker assumed-id-docker
          - module: compose
            name: Docker Compose with the classic image
            path: docker-compose
            tool: docker-compose
            stop: docker compose down
          - module: multiarch
            name: Docker Compose with the multiarch image
            path: docker-compose-multiarch
            tool: docker-compose
            stop: docker compose down
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.18.2'
    - name: Start Lowkey Vault using Docker compose
      if: ${{ matrix.tool == 'docker-compose' }}
      run: |
        cd ${{ matrix.path }}
        echo "Running ${{ matrix.name }}"
        docker compose up -d
        sleep 5
        docker ps
        if [ $(docker ps | grep nagyesta | wc -l) -ne 2 ]; then echo "ERROR: Some containers are not running"; exit 1; fi
    - name: Start Lowkey Vault using Docker command
      if: ${{ matrix.tool == 'docker' }}
      run: |
        cd ${{ matrix.path }}
        echo "Running ${{ matrix.name }}" 
        sh example.sh
        sleep 5
        docker ps
        if [ $(docker ps | grep nagyesta | wc -l) -ne 2 ]; then echo "ERROR: Some containers are not running"; exit 1; fi
    - name: Test with go
      env:
        IDENTITY_ENDPOINT: http://localhost:8080/metadata/identity/oauth2/token
        IDENTITY_HEADER: header
      run: |
        go clean -testcache
        go test ./test -v
    - name: Stop container
      if: always()
      run: |
        cd ${{ matrix.path }}
        ${{ matrix.stop }}
